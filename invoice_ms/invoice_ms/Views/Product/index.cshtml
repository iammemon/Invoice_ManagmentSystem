
@{
    ViewBag.Title = "index";
}

<h2>Product List</h2>

<button class="btn btn-success addBtn" data-toggle="modal" data-target="#productModal">Add</button>

<div id="productModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add product</h4>
            </div>
            <form id="productForm">
                <div class="modal-body row">

                    <div class="form-group col-md-offset-3 col-md-6">
                        <label for="name">Product Name</label>
                        <input type="text" class="form-control" name="name" value="" />
                    </div>
                    <div class="form-group col-md-offset-3 col-md-6">
                        <label for="name">Product Price</label>
                        <input type="number" class="form-control" name="price" value="" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Submit</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </form>

        </div>

    </div>
</div>


<div id="updateProductModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Update Product</h4>
            </div>
            <form id="updateProductForm">
                <div class="modal-body row">

                    <input type="hidden" name="Id" value="" id="uid" />
                    <div class="form-group col-md-offset-3 col-md-6">
                        <label for="name">Product Name</label>
                        <input type="text" class="form-control" name="name" value="" id="uname" />
                    </div>
                    <div class="form-group col-md-offset-3 col-md-6">
                        <label for="name">Product Price</label>
                        <input type="number" class="form-control" name="price" value="" id="uprice" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Update</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </form>

        </div>

    </div>
</div>





@if (ViewBag.list.Count == 0)
{
    <h1>No record Found</h1>
}
else
{
    <table id="productTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>product Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in @ViewBag.list)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Price</td>
                    <td>
                        <button class="btn btn-info" onclick='openModal(@Html.Raw(Json.Encode(@item)))'>Update</button>
                        <button class="btn btn-danger" onclick="deleteRecord(@item.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


<script>
    var deleteRecord;
    var openModal;
    $('#productTable').DataTable();
    $(document).ready(function () {

        //insertion
        $('#productForm').submit(function (e) {
            //prevent default behavior on submit
            e.preventDefault();
            //convert all form values in obj and store in result
            var result = $('#productForm').serializeArray().reduce(function (obj, item) {
                obj[item.name] = item.value;
                return obj;
            }, {});
            //send post request to server
            $.post('/product/Addproduct', result, function (data, status, xhr) {
                //alert('sucess');
                swal("Succesful","Sucessfully created","success");
                $('#productModal').modal('toggle');
                location.reload();
              
            }).fail(function (err) {
                alert('eror');
            })
        });
        //update
        $('#updateProductForm').submit(function (e) {
            //prevent default behavior on submit
            e.preventDefault();
            //convert all form values in obj and store in result
            var result = $('#updateProductForm').serializeArray().reduce(function (obj, item) {
                obj[item.name] = item.value;
                return obj;
            }, {});

            //send put request to server
            $.ajax({
                method: 'put',
                data:result,
                url: '/product/UpdateProduct/',
                success: function () {
                    swal("Succesful","Successfully updated","success");
                    location.reload();
                },
                error: function (data) {
                    alert('error')
                }
            })
        })
        //delete
        deleteRecord = function (id) {
            swal({
                title: "Are you sure?",
                text: "You will not be able to recover this!",
                type: "warning",
                showCancelButton: true,
                showLoaderOnConfirm:true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "delete it!",
                cancelButtonText: "No, cancel",
                closeOnConfirm: false,
                closeOnCancel: false
            },
            function(isConfirm){
                if (isConfirm) {
                    $.ajax({
                        method: 'delete',
                        url: '/product/DeleteProduct/' + id,
                        success: function () {
                            swal("Deleted!", "Successfully Removed", "success");
                            location.reload();
                        },
                        error: function (err) {
                            swal(err.statusText,"Something went wrong!","error");
                        }
                    })
                    
                } else {
                    swal("Cancelled", "Your data is safe :)", "error");
                }
            });
            
        }
        //helper
        openModal = function (product) {
            $('#uid').val(product.Id);
            $('#uname').val(product.Name);
            $('#uprice').val(product.Price);

            $('#updateProductModal').modal('show');
        }

    })


    

</script>

